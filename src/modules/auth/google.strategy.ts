import { Injectable } from '@nestjs/common';
import { PassportStrategy } from '@nestjs/passport';
import { Strategy } from 'passport-google-oauth20';
import { AuthService } from './auth.service';

@Injectable()
export class GoogleStrategy extends PassportStrategy(Strategy, 'google') {
  constructor(private readonly authService: AuthService) {
    super({
      clientID: process.env.GOOGLE_CLIENT_ID!,
      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,
      callbackURL: process.env.GOOGLE_CALLBACK_URL!,
      scope: ['email', 'profile'],
      passReqToCallback: true, // üëà –¥–∞—î –¥–æ—Å—Ç—É–ø –¥–æ req.query.state
    });
  }

  async validate(
    req: any,
    accessToken: string,
    refreshToken: string,
    profile: any,
    done: Function,
  ) {
    const { emails, displayName } = profile;
    const email = emails?.[0]?.value;

    // üëá user –∫–∞—Å—Ç–∏—Ç—å—Å—è –¥–æ any, –±–æ –º–∏ –¥–æ–¥–∞—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–µ –ø–æ–ª–µ lang
    const user: any = await this.authService.socialLogin({
      provider: 'google',
      email,
      name: displayName,
    });

    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –º–æ–≤—É, –ø–µ—Ä–µ–¥–∞–Ω—É –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ state
    user.lang = req.query.state || 'en';

    done(null, user);
  }
}
